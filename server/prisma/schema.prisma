generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Player {
  id       String @id @default(uuid())
  name     String
  imageUrl String @db.Text

  gamesOwned Game[] @relation("Owner")
  gamesGuest Game[] @relation("Guest")

  moves Move[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum GameStatus {
  WAITING
  PLAYING
  FINISHED
  CLOSED
}

model Game {
  id     String     @id @default(uuid())
  status GameStatus @default(WAITING)

  ownerId String
  owner   Player @relation("Owner", fields: [ownerId], references: [id], onDelete: Cascade)

  guestId String?
  guest   Player? @relation("Guest", fields: [guestId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  moves Move[]

  @@unique([ownerId, guestId])
  @@index([ownerId])
  @@index([guestId])
}

model Move {
  id String @id @default(uuid())

  order Int
  from  Int
  to    Int

  gameId String
  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)

  playerId String
  player   Player @relation(fields: [playerId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([gameId, order])
  @@index([playerId])
}
